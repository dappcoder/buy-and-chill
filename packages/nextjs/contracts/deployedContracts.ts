/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    PriceDataStorage: {
      address: "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      abi: [],
      inheritedFunctions: {},
      deploymentFile: "run-latest.json",
      deploymentScript: "DeployVault.s.sol",
    },
    PythIntegrator: {
      address: "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      abi: [],
      inheritedFunctions: {},
      deploymentFile: "run-latest.json",
      deploymentScript: "DeployVault.s.sol",
    },
    OneInchIntegrator: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [],
      inheritedFunctions: {},
      deploymentFile: "run-latest.json",
      deploymentScript: "DeployVault.s.sol",
    },
    MockDAI: {
      address: "0xc6e7DF5E7b4f2A278906862b61205850344D4e7d",
      abi: [],
      inheritedFunctions: {},
      deploymentFile: "run-latest.json",
      deploymentScript: "DeployVault.s.sol",
    },
    MockWETH: {
      address: "0x59b670e9fA9D0A427751Af201D676719a970857b",
      abi: [],
      inheritedFunctions: {},
      deploymentFile: "run-latest.json",
      deploymentScript: "DeployVault.s.sol",
    },
    MockWBTC: {
      address: "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      abi: [],
      inheritedFunctions: {},
      deploymentFile: "run-latest.json",
      deploymentScript: "DeployVault.s.sol",
    },
    Vault: {
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      abi: [
        {
          type: "constructor",
          inputs: [
            { name: "_priceDataStorage", type: "address", internalType: "address" },
            { name: "_pythIntegrator", type: "address", internalType: "address" },
            { name: "_oneInchIntegrator", type: "address", internalType: "address" },
            { name: "_daiAddress", type: "address", internalType: "address" },
            { name: "_ethAddress", type: "address", internalType: "address" },
            { name: "_btcAddress", type: "address", internalType: "address" },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "getMAValue",
          inputs: [{ name: "maType", type: "uint8", internalType: "enum Vault.MAType" }],
          outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getLatestPrice",
          inputs: [{ name: "maType", type: "uint8", internalType: "enum Vault.MAType" }],
          outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "deposit",
          inputs: [
            { name: "maType", type: "uint8", internalType: "enum Vault.MAType" },
            { name: "daiAmount", type: "uint256", internalType: "uint256" },
          ],
          outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "withdraw",
          inputs: [
            { name: "maType", type: "uint8", internalType: "enum Vault.MAType" },
            { name: "maTokens", type: "uint256", internalType: "uint256" },
          ],
          outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "rebalanceThreshold",
          inputs: [],
          outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "slippageTolerance",
          inputs: [],
          outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "daiAddress",
          inputs: [],
          outputs: [{ name: "", type: "address", internalType: "address" }],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "ethAddress",
          inputs: [],
          outputs: [{ name: "", type: "address", internalType: "address" }],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "btcAddress",
          inputs: [],
          outputs: [{ name: "", type: "address", internalType: "address" }],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "balanceOf",
          inputs: [{ name: "account", type: "address", internalType: "address" }],
          outputs: [{ name: "", type: "uint256", internalType: "uint256" }],
          stateMutability: "view",
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-latest.json",
      deploymentScript: "DeployVault.s.sol",
    },
    YourContract: {
      address: "0xb19b36b1456E65E3A6D514D3F715f204BD59f431",
      abi: [
        {
          type: "constructor",
          inputs: [
            {
              name: "_owner",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "receive",
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "buyToken",
          inputs: [
            {
              name: "instrument",
              type: "string",
              internalType: "string",
            },
            {
              name: "daiAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "getDaiBalance",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getHistoricalPrices",
          inputs: [
            {
              name: "instrument",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256[]",
              internalType: "uint256[]",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getPerformanceData",
          inputs: [
            {
              name: "instrument",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "int256[]",
              internalType: "int256[]",
            },
          ],
          stateMutability: "pure",
        },
        {
          type: "function",
          name: "getTokenBalance",
          inputs: [
            {
              name: "user",
              type: "address",
              internalType: "address",
            },
            {
              name: "instrument",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "getTokenPrice",
          inputs: [
            {
              name: "instrument",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "greeting",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "historicalPrices",
          inputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "maValues",
          inputs: [
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "owner",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "premium",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "sellToken",
          inputs: [
            {
              name: "instrument",
              type: "string",
              internalType: "string",
            },
            {
              name: "tokenAmount",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [
            {
              name: "",
              type: "bool",
              internalType: "bool",
            },
          ],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "setGreeting",
          inputs: [
            {
              name: "_newGreeting",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [],
          stateMutability: "payable",
        },
        {
          type: "function",
          name: "tokenBalances",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
            {
              name: "",
              type: "string",
              internalType: "string",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "totalCounter",
          inputs: [],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "updateMAValue",
          inputs: [
            {
              name: "instrument",
              type: "string",
              internalType: "string",
            },
            {
              name: "newValue",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "function",
          name: "userGreetingCounter",
          inputs: [
            {
              name: "",
              type: "address",
              internalType: "address",
            },
          ],
          outputs: [
            {
              name: "",
              type: "uint256",
              internalType: "uint256",
            },
          ],
          stateMutability: "view",
        },
        {
          type: "function",
          name: "withdraw",
          inputs: [],
          outputs: [],
          stateMutability: "nonpayable",
        },
        {
          type: "event",
          name: "GreetingChange",
          inputs: [
            {
              name: "greetingSetter",
              type: "address",
              indexed: true,
              internalType: "address",
            },
            {
              name: "newGreeting",
              type: "string",
              indexed: false,
              internalType: "string",
            },
            {
              name: "premium",
              type: "bool",
              indexed: false,
              internalType: "bool",
            },
            {
              name: "value",
              type: "uint256",
              indexed: false,
              internalType: "uint256",
            },
          ],
          anonymous: false,
        },
      ],
      inheritedFunctions: {},
      deploymentFile: "run-1748440895.json",
      deploymentScript: "Deploy.s.sol",
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
